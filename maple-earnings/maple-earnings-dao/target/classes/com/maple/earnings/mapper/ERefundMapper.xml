<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.maple.earnings.mapper.ERefundMapper" >
  <resultMap id="BaseResultMap" type="com.maple.earnings.pojo.ERefund" >
    <result column="refund_id" property="refundId" jdbcType="BIGINT" />
    <result column="alipay_no" property="alipayNo" jdbcType="BIGINT" />
    <result column="created" property="created" jdbcType="VARCHAR" />
    <result column="order_status" property="orderStatus" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="good_status" property="goodStatus" jdbcType="VARCHAR" />
    <result column="refund_fee" property="refundFee" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    refund_id, alipay_no, created, order_status, status, good_status, refund_fee
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.maple.earnings.pojo.ERefundExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from e_refund
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.maple.earnings.pojo.ERefundExample" >
    delete from e_refund
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.maple.earnings.pojo.ERefund" >
    insert into e_refund (refund_id, alipay_no, created, 
      order_status, status, good_status, 
      refund_fee)
    values (#{refundId,jdbcType=BIGINT}, #{alipayNo,jdbcType=BIGINT}, #{created,jdbcType=VARCHAR}, 
      #{orderStatus,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{goodStatus,jdbcType=VARCHAR}, 
      #{refundFee,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.maple.earnings.pojo.ERefund" >
    insert into e_refund
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="refundId != null" >
        refund_id,
      </if>
      <if test="alipayNo != null" >
        alipay_no,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="goodStatus != null" >
        good_status,
      </if>
      <if test="refundFee != null" >
        refund_fee,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="refundId != null" >
        #{refundId,jdbcType=BIGINT},
      </if>
      <if test="alipayNo != null" >
        #{alipayNo,jdbcType=BIGINT},
      </if>
      <if test="created != null" >
        #{created,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="goodStatus != null" >
        #{goodStatus,jdbcType=VARCHAR},
      </if>
      <if test="refundFee != null" >
        #{refundFee,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.maple.earnings.pojo.ERefundExample" resultType="java.lang.Integer" >
    select count(*) from e_refund
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update e_refund
    <set >
      <if test="record.refundId != null" >
        refund_id = #{record.refundId,jdbcType=BIGINT},
      </if>
      <if test="record.alipayNo != null" >
        alipay_no = #{record.alipayNo,jdbcType=BIGINT},
      </if>
      <if test="record.created != null" >
        created = #{record.created,jdbcType=VARCHAR},
      </if>
      <if test="record.orderStatus != null" >
        order_status = #{record.orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.goodStatus != null" >
        good_status = #{record.goodStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.refundFee != null" >
        refund_fee = #{record.refundFee,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update e_refund
    set refund_id = #{record.refundId,jdbcType=BIGINT},
      alipay_no = #{record.alipayNo,jdbcType=BIGINT},
      created = #{record.created,jdbcType=VARCHAR},
      order_status = #{record.orderStatus,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      good_status = #{record.goodStatus,jdbcType=VARCHAR},
      refund_fee = #{record.refundFee,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>